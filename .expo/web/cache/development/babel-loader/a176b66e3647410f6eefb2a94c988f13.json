{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"D:\\\\GoIT\\\\reactNative\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"react-native\";\nimport { AppLoading } from \"expo\";\nimport LoginScreen from \"./screens/auth/LoginScreen\";\nimport RegisterScreen from \"./screens/auth/RegisterScreen\";\n\nvar loadApplication = function loadApplication() {\n  return _regeneratorRuntime.async(function loadApplication$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(Font.loadAsync({\n            \"Lemonada-Regular\": require(\"./assets/fonts/Lemonada-VariableFont_wght.ttf\")\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isReady = _useState2[0],\n      setIsReady = _useState2[1];\n\n  if (isReady) {\n    return React.createElement(AppLoading, {\n      startAsync: loadApplication,\n      onFinish: function onFinish() {\n        return setIsReady(true);\n      },\n      onError: console.warn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(RegisterScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["D:/GoIT/reactNative/App.js"],"names":["React","useState","useEffect","AppLoading","LoginScreen","RegisterScreen","loadApplication","Font","loadAsync","require","App","isReady","setIsReady","console","warn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAe,cAAf;AAEA,SAASC,UAAT,QAA2B,MAA3B;AAEA,OAAOC,WAAP;AACA,OAAOC,cAAP;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAChBC,IAAI,CAACC,SAAL,CAAe;AACnB,gCAAoBC,OAAO;AADR,WAAf,CADgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAMA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACET,QAAQ,CAAC,KAAD,CADV;AAAA;AAAA,MACrBU,OADqB;AAAA,MACZC,UADY;;AAG5B,MAAID,OAAJ,EAAa;AACX,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEL,eADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMM,UAAU,CAAC,IAAD,CAAhB;AAAA,OAFZ;AAGE,MAAA,OAAO,EAAEC,OAAO,CAACC,IAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAED,SACE,0CAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {} from \"react-native\";\n// import * as Font from \"expo-font\";\nimport { AppLoading } from \"expo\";\n\nimport LoginScreen from \"./screens/auth/LoginScreen\";\nimport RegisterScreen from \"./screens/auth/RegisterScreen\";\n\nconst loadApplication = async () => {\n  await Font.loadAsync({\n    \"Lemonada-Regular\": require(\"./assets/fonts/Lemonada-VariableFont_wght.ttf\"),\n  });\n};\n\nexport default function App() {\n  const [isReady, setIsReady] = useState(false);\n\n  if (isReady) {\n    return (\n      <AppLoading\n        startAsync={loadApplication}\n        onFinish={() => setIsReady(true)}\n        onError={console.warn}\n      />\n    );\n  }\n\n  return (\n    <>\n      {/* <LoginScreen /> */}\n      <RegisterScreen />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}