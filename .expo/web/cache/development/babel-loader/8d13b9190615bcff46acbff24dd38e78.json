{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\GoIT\\\\reactNative\\\\screens\\\\auth\\\\LoginScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nvar initialState = {\n  email: \"\",\n  password: \"\"\n};\nexport default function LoginScreen() {\n  console.log(Platform.OS);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isShowKeyboard = _useState2[0],\n      setIsShowKeyboard = _useState2[1];\n\n  var _useState3 = useState(initialState),\n      _useState4 = _slicedToArray(_useState3, 2),\n      state = _useState4[0],\n      setState = _useState4[1];\n\n  var _useState5 = useState(Dimensions.get(\"window\").width - 20 * 2),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dimensions = _useState6[0],\n      setDimensions = _useState6[1];\n\n  useEffect(function () {\n    var onChange = function onChange() {\n      var width = Dimensions.get(\"window\").width - 20 * 2;\n      console.log(\"width\", width);\n      setDimensions(width);\n    };\n\n    Dimensions.addEventListener(\"change\", onChange);\n    return function () {\n      Dimensions.removeEventListener(\"change\", onChange);\n    };\n  }, []);\n\n  var keyboardHide = function keyboardHide() {\n    setIsShowKeyboard(false);\n    Keyboard.dismiss();\n    console.log(state);\n    setState(initialState);\n  };\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: keyboardHide,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(ImageBackground, {\n    style: styles.image,\n    source: require(\"../../assets/fon.jpg\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.form), {}, {\n      marginBottom: isShowKeyboard ? 20 : 100,\n      width: dimensions\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.innerBox,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Alina Star\")), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.inputTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"EMAIL ADDRESS\"), React.createElement(TextInput, {\n    style: styles.input,\n    textAlign: \"center\",\n    onFocus: function onFocus() {\n      return setIsShowKeyboard(true);\n    },\n    value: state.email,\n    onChange: function onChange(nativeEvent) {\n      return console.log(nativeEvent);\n    },\n    onChangeText: function onChangeText(value) {\n      return setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          email: value\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.inputTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"PASSWORD\"), React.createElement(TextInput, {\n    style: styles.input,\n    textAlign: \"center\",\n    secureTextEntry: true,\n    onFocus: function onFocus() {\n      return setIsShowKeyboard(true);\n    },\n    value: state.password,\n    onChangeText: function onChangeText(value) {\n      return setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          password: value\n        });\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  })), React.createElement(TouchableOpacity, {\n    activeOpacity: 0.8,\n    style: styles.btn,\n    onPress: function onPress() {\n      return keyboardHide;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.btnTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"SIGN IN\")))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  text: {\n    color: \"#6495ed\",\n    fontSize: 30,\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n    borderColor: \"white\",\n    borderWidth: 2,\n    borderRadius: 10,\n    backgroundColor: \"white\"\n  },\n  innerBox: {\n    borderWidth: 3,\n    marginBottom: 10,\n    marginTop: 30,\n    borderColor: \"blue\",\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 40,\n    paddingRight: 40,\n    borderRadius: 10\n  },\n  image: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  input: {\n    borderWidth: 1,\n    height: 40,\n    borderRadius: 6,\n    fontSize: 20\n  },\n  form: {\n    marginHorizontal: 40\n  },\n  inputTitle: {\n    marginTop: 10,\n    marginBottom: 10,\n    fontSize: 18\n  },\n  btn: _objectSpread({\n    borderRadius: 6,\n    borderWidth: 1,\n    height: 40,\n    marginTop: 30,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginHorizontal: 20\n  }, Platform.select({\n    ios: {\n      backgroundColor: \"transparent\",\n      borderColor: \"#f0f8ff\"\n    },\n    android: {\n      backgroundColor: \"#4169e1\",\n      borderColor: \"transparent\"\n    }\n  })),\n  btnTitle: {\n    color: 'Platform.OS === \"ios\" ? \"royalblue\" : \"#f0f8ff\"',\n    fontSize: 18\n  }\n});","map":{"version":3,"sources":["D:/GoIT/reactNative/screens/auth/LoginScreen.js"],"names":["React","useState","useEffect","initialState","email","password","LoginScreen","console","log","Platform","OS","isShowKeyboard","setIsShowKeyboard","state","setState","Dimensions","get","width","dimensions","setDimensions","onChange","addEventListener","removeEventListener","keyboardHide","Keyboard","dismiss","styles","container","image","require","form","marginBottom","innerBox","text","inputTitle","input","nativeEvent","value","prevState","btn","btnTitle","StyleSheet","create","flex","backgroundColor","color","fontSize","textAlign","fontWeight","borderColor","borderWidth","borderRadius","marginTop","paddingTop","paddingBottom","paddingLeft","paddingRight","resizeMode","justifyContent","alignItems","height","marginHorizontal","select","ios","android"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  ImageBackground,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Platform,\r\n  KeyboardAvoidingView,\r\n  Keyboard,\r\n  TouchableWithoutFeedback,\r\n  Dimensions,\r\n} from \"react-native\";\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nexport default function LoginScreen() {\r\n  console.log(Platform.OS);\r\n  const [isShowKeyboard, setIsShowKeyboard] = useState(false);\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const [dimensions, setDimensions] = useState(\r\n    Dimensions.get(\"window\").width - 20 * 2\r\n  );\r\n\r\n  useEffect(() => {\r\n    const onChange = () => {\r\n      const width = Dimensions.get(\"window\").width - 20 * 2;\r\n      console.log(\"width\", width);\r\n      setDimensions(width);\r\n    };\r\n    Dimensions.addEventListener(\"change\", onChange);\r\n    return () => {\r\n      Dimensions.removeEventListener(\"change\", onChange);\r\n    };\r\n  }, []);\r\n\r\n  const keyboardHide = () => {\r\n    setIsShowKeyboard(false);\r\n    Keyboard.dismiss();\r\n    console.log(state);\r\n    setState(initialState);\r\n  };\r\n\r\n  return (\r\n    <TouchableWithoutFeedback onPress={keyboardHide}>\r\n      <View style={styles.container}>\r\n        <ImageBackground\r\n          style={styles.image}\r\n          source={require(\"../../assets/fon.jpg\")}\r\n        >\r\n          <KeyboardAvoidingView\r\n            behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\r\n          >\r\n            <View\r\n              style={{\r\n                ...styles.form,\r\n                marginBottom: isShowKeyboard ? 20 : 100,\r\n                width: dimensions,\r\n              }}\r\n            >\r\n              <View style={styles.innerBox}>\r\n                <Text style={styles.text}>Alina Star</Text>\r\n              </View>\r\n\r\n              <View>\r\n                <Text style={styles.inputTitle}>EMAIL ADDRESS</Text>\r\n                <TextInput\r\n                  style={styles.input}\r\n                  textAlign={\"center\"}\r\n                  onFocus={() => setIsShowKeyboard(true)}\r\n                  value={state.email}\r\n                  onChange={(nativeEvent) => console.log(nativeEvent)}\r\n                  onChangeText={(value) =>\r\n                    setState((prevState) => ({ ...prevState, email: value }))\r\n                  }\r\n                />\r\n              </View>\r\n\r\n              <View>\r\n                <Text style={styles.inputTitle}>PASSWORD</Text>\r\n                <TextInput\r\n                  style={styles.input}\r\n                  textAlign={\"center\"}\r\n                  secureTextEntry={true}\r\n                  onFocus={() => setIsShowKeyboard(true)}\r\n                  value={state.password}\r\n                  onChangeText={(value) =>\r\n                    setState((prevState) => ({ ...prevState, password: value }))\r\n                  }\r\n                />\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                activeOpacity={0.8}\r\n                style={styles.btn}\r\n                onPress={() => keyboardHide}\r\n              >\r\n                <Text style={styles.btnTitle}>SIGN IN</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </KeyboardAvoidingView>\r\n        </ImageBackground>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    // alignItems: \"center\",\r\n    // justifyContent: \"center\",\r\n  },\r\n  text: {\r\n    color: \"#6495ed\",\r\n    fontSize: 30,\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\",\r\n    borderColor: \"white\",\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n    backgroundColor: \"white\",\r\n  },\r\n  innerBox: {\r\n    borderWidth: 3,\r\n    marginBottom: 10,\r\n    marginTop: 30,\r\n    borderColor: \"blue\",\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    paddingLeft: 40,\r\n    paddingRight: 40,\r\n    borderRadius: 10,\r\n  },\r\n  image: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    height: 40,\r\n    borderRadius: 6,\r\n    fontSize: 20,\r\n  },\r\n  form: {\r\n    marginHorizontal: 40,\r\n  },\r\n  inputTitle: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n    fontSize: 18,\r\n  },\r\n  btn: {\r\n    borderRadius: 6,\r\n    borderWidth: 1,\r\n    height: 40,\r\n    marginTop: 30,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginHorizontal: 20,\r\n    ...Platform.select({\r\n      ios: {\r\n        backgroundColor: \"transparent\",\r\n        borderColor: \"#f0f8ff\",\r\n      },\r\n      android: {\r\n        backgroundColor: \"#4169e1\",\r\n        borderColor: \"transparent\",\r\n      },\r\n    }),\r\n  },\r\n  btnTitle: {\r\n    color: 'Platform.OS === \"ios\" ? \"royalblue\" : \"#f0f8ff\"',\r\n    fontSize: 18,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}